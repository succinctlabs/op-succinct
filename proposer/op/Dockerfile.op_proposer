# Build stage
FROM --platform=$BUILDPLATFORM golang:1.22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache make gcc musl-dev linux-headers git

# Set up cross-compilation
ARG TARGETOS
ARG TARGETARCH
ENV GOOS=$TARGETOS
ENV GOARCH=$TARGETARCH

# Install cross-compilation tools for ARM64
RUN if [ "$TARGETARCH" = "arm64" ]; then \
    apk add --no-cache gcc-aarch64-none-elf musl-dev; \
fi

WORKDIR /optimism

# Cache go modules
COPY ./proposer/op/go.mod ./proposer/op/go.sum /optimism/op-proposer/
WORKDIR /optimism/op-proposer
RUN go mod download

# Build the application
COPY ./proposer/op /optimism/op-proposer
WORKDIR /optimism/op-proposer/proposer
RUN --mount=type=cache,target=/root/.cache/go-build \
    make op-proposer

# Runtime stage
FROM --platform=$TARGETPLATFORM ubuntu:22.04

RUN apt-get update && apt-get install -y \
    ca-certificates \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /optimism/op-proposer/proposer/bin/op-proposer /usr/local/bin/
COPY ./proposer/op/op_proposer.sh /usr/local/bin/
COPY ../configs /configs

RUN chmod +x /usr/local/bin/op-proposer /usr/local/bin/op_proposer.sh

ENTRYPOINT ["/usr/local/bin/op_proposer.sh"]