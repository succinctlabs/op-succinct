SOURCE := source_directory()
ROOT := parent_directory(SOURCE)

test-e2e-sysgo BINARY DEVNET="simple" FILTER="" : unzip-contract-artifacts
    #!/bin/bash

    if ! [ -z "{{FILTER}}" ]; then
        export FILTER="-run {{FILTER}}"
    fi

    export OP_DEPLOYER_ARTIFACTS="{{SOURCE}}/artifacts"
    export DISABLE_OP_E2E_LEGACY=true

    if [ "{{DEVNET}}" = "simple" ]; then
        export OP_SEQUENCER_WITH_RETH=1
        export OP_VALIDATOR_WITH_RETH=1
        export OP_SEQUENCER_WITH_GETH=1
        export OP_VALIDATOR_WITH_GETH=1
    fi
    
    if [ "{{BINARY}}" = "validity" ]; then
        export SV_PROPOSER_EXEC_PATH="{{ROOT}}/target/release/validity"
        export DEVSTACK_ORCHESTRATOR=sysgo
        echo "Building validity proposer..."
        cd .. && cargo build --bin validity --release
    else
        echo "Invalid BINARY specified. Must be either 'validity' or 'fault-proof'."
        exit 1
    fi

    # Run the test with count=1 to avoid caching the test results.
    cd {{SOURCE}} && go test -count=1 -timeout 40m -v ./e2e $FILTER

unzip-contract-artifacts DEST_DIR="":
    #!/bin/bash

    export DEST_DIR="{{DEST_DIR}}"
    if [ -z "{{DEST_DIR}}" ]; then
        export DEST_DIR="{{SOURCE}}/artifacts/src"
    fi

    mkdir -p $DEST_DIR

    zstd -d -c {{SOURCE}}/artifacts/compressed/artifacts.tzst | tar -x -C $DEST_DIR
    cp -r {{ROOT}}/contracts/out/DeployMockVerifier.s.sol $DEST_DIR/forge-artifacts/DeployMockVerifier.s.sol
    cp -r {{ROOT}}/contracts/out/*OPSuccinct* $DEST_DIR/forge-artifacts/

update-packages: 
    #!/bin/bash
    cd {{SOURCE}}/optimism/op-deployer && just build-contracts copy-contract-artifacts
    cp {{SOURCE}}/optimism/op-deployer/pkg/deployer/artifacts/forge-artifacts/artifacts.tzst {{SOURCE}}/artifacts/compressed/artifacts.tzst
